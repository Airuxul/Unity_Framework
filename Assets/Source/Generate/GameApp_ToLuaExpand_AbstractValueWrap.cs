//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameApp_ToLuaExpand_AbstractValueWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameApp.ToLuaExpand.AbstractValue), typeof(System.Object));
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("name", get_name, set_name);
		L.RegVar("valueType", get_valueType, set_valueType);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.ToLuaExpand.AbstractValue obj = (GameApp.ToLuaExpand.AbstractValue)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_valueType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.ToLuaExpand.AbstractValue obj = (GameApp.ToLuaExpand.AbstractValue)o;
			GameApp.ToLuaExpand.ValueType ret = obj.valueType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index valueType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.ToLuaExpand.AbstractValue obj = (GameApp.ToLuaExpand.AbstractValue)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_valueType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameApp.ToLuaExpand.AbstractValue obj = (GameApp.ToLuaExpand.AbstractValue)o;
			GameApp.ToLuaExpand.ValueType arg0 = (GameApp.ToLuaExpand.ValueType)ToLua.CheckObject(L, 2, typeof(GameApp.ToLuaExpand.ValueType));
			obj.valueType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index valueType on a nil value");
		}
	}
}

